{"version":3,"file":"static/js/946.8495f212.chunk.js","mappings":"4LAOA,MAmFA,EAnFsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IACjCO,GAAQC,EAAAA,EAAAA,MAkCd,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,oBAAoBC,IAAK,MACpCL,EAAAA,EAAAA,MAAA,QACEM,SArCuBC,UAC3BC,EAAEC,iBACF,MAAMC,EAAS,CACbC,OAAQ,CACN,eAAgB,qBAGpB,GAAItB,IAAaG,EAMf,OALAF,EAAY,IACZG,EAAmB,IACnBmB,YAAW,KACTjB,EAAS,GAAG,GACX,KACIA,EAAS,yBAElB,IACE,MAAM,KAAEkB,SAAeC,IAAAA,IACrB,kEAAkEhB,EAAMiB,OAAOC,aAC/E,CACE3B,YAEFqB,GAEFO,QAAQC,IAAIL,GACZhB,EAAWgB,EAAKA,KAClB,CAAE,MAAOnB,GACPC,EAASD,EAAMyB,SAASN,KAAKnB,OAC7BkB,YAAW,KACTjB,EAAS,GAAG,GACX,IACL,GAQIM,UAAU,kBAAiBC,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAK,yBACLC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,qDAC3BR,IAASM,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iBAAgBC,SAAA,CAAER,EAAM,OACjDE,IACCI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBC,SAAA,CAC/BN,EAAQ,KAACO,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,SAAQnB,SAAC,cAG9BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,SAAQC,SAAE,kBAC1BC,EAAAA,EAAAA,KAAA,SACEF,UAAU,eACVqB,KAAK,WACLC,UAAQ,EACRC,GAAG,WACHC,aAAa,OACbC,MAAOrC,EACPsC,SAAWnB,GAAMlB,EAAYkB,EAAEoB,OAAOF,UAExCvB,EAAAA,EAAAA,KAAA,QAAMF,UAAU,SAAQC,SAAE,uBAC1BC,EAAAA,EAAAA,KAAA,SACEF,UAAU,eACVqB,KAAK,WACLC,UAAQ,EACRM,YAAY,wBACZL,GAAG,kBACHC,aAAa,OACbC,MAAOlC,EACPmC,SAAWnB,GAAMf,EAAmBe,EAAEoB,OAAOF,UAEjDvB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAASrB,UAAU,cAAaC,SAAC,sBAI5C,C","sources":["components/Signin/ResetPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useRouteMatch, } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const match = useRouteMatch()\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n    try {\r\n      const { data } = await axios.put(\r\n        `https://audible-e-commerce.onrender.com/api/auth/resetpassword/${match.params.resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin\">  \r\n        <img src='/audible/logo.png' alt ='' />\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"form__container\"\r\n        >\r\n        <h3 >Create new password</h3>\r\n        <h5 className='reset__info'>We'll ask for this password whenever you Sign-In</h5>\r\n        {error && <span className=\"error__message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success__message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n          <span className=\"labels\" >New Password</span>\r\n          <input\r\n            className=\"input__field\"\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span className=\"labels\" >Re-enter password</span>\r\n          <input\r\n            className=\"input__field\"\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"At least 6 characters\"\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        <button type=\"submit\" className=\"signin__btn\">\r\n          Save Changes\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","match","useRouteMatch","_jsxs","className","children","_jsx","src","alt","onSubmit","async","e","preventDefault","config","header","setTimeout","data","axios","params","resetToken","console","log","response","Link","to","type","required","id","autoComplete","value","onChange","target","placeholder"],"sourceRoot":""}